//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/InputActions/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Cubic"",
            ""id"": ""b0bc01ae-27f7-40b3-8f4b-f7d8421db9dd"",
            ""actions"": [
                {
                    ""name"": ""KeyboardMove"",
                    ""type"": ""Value"",
                    ""id"": ""0816c746-d3f8-4b91-9a56-2e4dea4b5070"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PointerPosition"",
                    ""type"": ""Value"",
                    ""id"": ""bb4fc578-2d86-4bdf-8425-bd44edb42a9c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""PointerPress"",
                    ""type"": ""Button"",
                    ""id"": ""b602f47a-75bc-4cf2-a8e6-7b1f257f6e11"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PressSpeedReduce"",
                    ""type"": ""Button"",
                    ""id"": ""af889383-7be0-48cc-998e-c4e4a521498c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""c607644f-3470-408e-ba79-60eff5d94623"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""db7bd348-53d9-40a8-af16-15e91378d8d3"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""KeyboardMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""247fa647-d0e6-4e5a-9e94-f887fffc938f"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""KeyboardMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""15497039-3a68-4b8d-b177-ac480db7c0d3"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""KeyboardMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""e7d23cb7-554c-4917-b242-31ed1c43e87b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KeyboardMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4f1bb280-d335-413b-b6cf-4466ef16bc21"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""KeyboardMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""69505b97-cfc4-41f9-8df3-eb68dfd647ec"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""KeyboardMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cfd36e12-4a4e-48d6-b2ed-c030e4377ab2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""KeyboardMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f00c6f80-e164-4aed-b724-7788e67c3da0"",
                    ""path"": ""<Pointer>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse;Touchscreen"",
                    ""action"": ""PointerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c38e8ca-3b3c-4bb2-a18a-7d5aebe7e54b"",
                    ""path"": ""<Pointer>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse;Touchscreen"",
                    ""action"": ""PointerPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d9ab85d-bb8c-4166-98b9-82f4501e5264"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PressSpeedReduce"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d9bbda7-93dc-4a09-a986-e273d8353ea5"",
                    ""path"": ""<Pointer>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse;Touchscreen"",
                    ""action"": ""PressSpeedReduce"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Mouse"",
            ""bindingGroup"": ""Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touchscreen"",
            ""bindingGroup"": ""Touchscreen"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Cubic
        m_Cubic = asset.FindActionMap("Cubic", throwIfNotFound: true);
        m_Cubic_KeyboardMove = m_Cubic.FindAction("KeyboardMove", throwIfNotFound: true);
        m_Cubic_PointerPosition = m_Cubic.FindAction("PointerPosition", throwIfNotFound: true);
        m_Cubic_PointerPress = m_Cubic.FindAction("PointerPress", throwIfNotFound: true);
        m_Cubic_PressSpeedReduce = m_Cubic.FindAction("PressSpeedReduce", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Cubic
    private readonly InputActionMap m_Cubic;
    private ICubicActions m_CubicActionsCallbackInterface;
    private readonly InputAction m_Cubic_KeyboardMove;
    private readonly InputAction m_Cubic_PointerPosition;
    private readonly InputAction m_Cubic_PointerPress;
    private readonly InputAction m_Cubic_PressSpeedReduce;
    public struct CubicActions
    {
        private @PlayerInput m_Wrapper;
        public CubicActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @KeyboardMove => m_Wrapper.m_Cubic_KeyboardMove;
        public InputAction @PointerPosition => m_Wrapper.m_Cubic_PointerPosition;
        public InputAction @PointerPress => m_Wrapper.m_Cubic_PointerPress;
        public InputAction @PressSpeedReduce => m_Wrapper.m_Cubic_PressSpeedReduce;
        public InputActionMap Get() { return m_Wrapper.m_Cubic; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CubicActions set) { return set.Get(); }
        public void SetCallbacks(ICubicActions instance)
        {
            if (m_Wrapper.m_CubicActionsCallbackInterface != null)
            {
                @KeyboardMove.started -= m_Wrapper.m_CubicActionsCallbackInterface.OnKeyboardMove;
                @KeyboardMove.performed -= m_Wrapper.m_CubicActionsCallbackInterface.OnKeyboardMove;
                @KeyboardMove.canceled -= m_Wrapper.m_CubicActionsCallbackInterface.OnKeyboardMove;
                @PointerPosition.started -= m_Wrapper.m_CubicActionsCallbackInterface.OnPointerPosition;
                @PointerPosition.performed -= m_Wrapper.m_CubicActionsCallbackInterface.OnPointerPosition;
                @PointerPosition.canceled -= m_Wrapper.m_CubicActionsCallbackInterface.OnPointerPosition;
                @PointerPress.started -= m_Wrapper.m_CubicActionsCallbackInterface.OnPointerPress;
                @PointerPress.performed -= m_Wrapper.m_CubicActionsCallbackInterface.OnPointerPress;
                @PointerPress.canceled -= m_Wrapper.m_CubicActionsCallbackInterface.OnPointerPress;
                @PressSpeedReduce.started -= m_Wrapper.m_CubicActionsCallbackInterface.OnPressSpeedReduce;
                @PressSpeedReduce.performed -= m_Wrapper.m_CubicActionsCallbackInterface.OnPressSpeedReduce;
                @PressSpeedReduce.canceled -= m_Wrapper.m_CubicActionsCallbackInterface.OnPressSpeedReduce;
            }
            m_Wrapper.m_CubicActionsCallbackInterface = instance;
            if (instance != null)
            {
                @KeyboardMove.started += instance.OnKeyboardMove;
                @KeyboardMove.performed += instance.OnKeyboardMove;
                @KeyboardMove.canceled += instance.OnKeyboardMove;
                @PointerPosition.started += instance.OnPointerPosition;
                @PointerPosition.performed += instance.OnPointerPosition;
                @PointerPosition.canceled += instance.OnPointerPosition;
                @PointerPress.started += instance.OnPointerPress;
                @PointerPress.performed += instance.OnPointerPress;
                @PointerPress.canceled += instance.OnPointerPress;
                @PressSpeedReduce.started += instance.OnPressSpeedReduce;
                @PressSpeedReduce.performed += instance.OnPressSpeedReduce;
                @PressSpeedReduce.canceled += instance.OnPressSpeedReduce;
            }
        }
    }
    public CubicActions @Cubic => new CubicActions(this);
    private int m_MouseSchemeIndex = -1;
    public InputControlScheme MouseScheme
    {
        get
        {
            if (m_MouseSchemeIndex == -1) m_MouseSchemeIndex = asset.FindControlSchemeIndex("Mouse");
            return asset.controlSchemes[m_MouseSchemeIndex];
        }
    }
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_TouchscreenSchemeIndex = -1;
    public InputControlScheme TouchscreenScheme
    {
        get
        {
            if (m_TouchscreenSchemeIndex == -1) m_TouchscreenSchemeIndex = asset.FindControlSchemeIndex("Touchscreen");
            return asset.controlSchemes[m_TouchscreenSchemeIndex];
        }
    }
    public interface ICubicActions
    {
        void OnKeyboardMove(InputAction.CallbackContext context);
        void OnPointerPosition(InputAction.CallbackContext context);
        void OnPointerPress(InputAction.CallbackContext context);
        void OnPressSpeedReduce(InputAction.CallbackContext context);
    }
}
